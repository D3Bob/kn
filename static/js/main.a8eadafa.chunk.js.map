{"version":3,"sources":["comnonents/Osu/OsuStyles.module.css","comnonents/Osu/InputList/InputName.jsx","comnonents/Osu/InputList/InputSurname.jsx","comnonents/Osu/InputList/InputSend.jsx","comnonents/Osu/InputList/InputMotive.jsx","comnonents/Osu/InputList/InputGroup.jsx","comnonents/Osu/Osu.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","InputName","props","input","useRef","Input","value","name","inputRef","placeholder","className","UIstyle","startAdornment","InputAdornment","position","inputProps","onChange","setName","current","fullWidth","InputSurname","surname","setSurname","InputSend","Button","variant","color","type","endIcon","InputMotive","TextField","motive","setMotive","InputGroup","group","setGroup","useStyles","makeStyles","theme","margin","spacing","textarea","marginLeft","marginRight","Osu","UIstyles","useState","openSubmit","setOpenSubmit","openError","setOpenError","useEffect","console","log","Alert","severity","style","display","action","size","onClick","styles","form","onSubmit","e","preventDefault","root","flexGrow","menuButton","title","App","classes","AppBar","Toolbar","IconButton","edge","aria-label","Typography","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a8eadafa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"osu\":\"OsuStyles_osu__3Vtfg\",\"form\":\"OsuStyles_form__1gJRe\"};","import React, {useRef} from 'react';\r\nimport { Input, InputAdornment } from '@material-ui/core';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\n\r\nfunction InputName(props) {\r\n\r\n    const input = useRef(null)\r\n    const write = () => props.setName(input.current.value)\r\n    \r\n    return (\r\n        <Input\r\n            value={props.name}\r\n            inputRef={input}\r\n            placeholder={'Имя'}\r\n            className={props.UIstyle}\r\n            startAdornment={<InputAdornment position=\"start\"><AccountCircleIcon /></InputAdornment>}\r\n            inputProps={{ 'aria-label': 'description' }}\r\n            onChange={write}\r\n            fullWidth\r\n            />\r\n        \r\n    );\r\n}\r\n\r\nexport default InputName;\r\n","import React, {useRef} from 'react';\r\nimport { Input, InputAdornment } from '@material-ui/core';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\n\r\nfunction InputSurname(props) {\r\n\r\n    const input = useRef(null)\r\n    const write = () => props.setSurname(input.current.value)\r\n\r\n    return (\r\n        <Input\r\n            value={props.surname}\r\n            placeholder={'Фамилия'}\r\n            className={props.UIstyle}\r\n            startAdornment={<InputAdornment position=\"start\"><AccountCircleIcon /></InputAdornment>}\r\n            inputProps={{ 'aria-label': 'description' }}\r\n            inputRef={input}\r\n            onChange={write}\r\n            fullWidth>\r\n        </Input>\r\n    );\r\n}\r\n\r\nexport default InputSurname;\r\n","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\n\r\nfunction InputSend(props) {\r\n    return (\r\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\"  endIcon={<SendIcon></SendIcon>}>Отправить</Button>\r\n    );\r\n}\r\n\r\nexport default InputSend;\r\n","import React, {useRef} from 'react';\r\nimport { TextField, InputAdornment  } from '@material-ui/core';\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\n\r\n\r\n\r\nfunction InputMotive(props) {\r\n\r\n    const input = useRef(null)\r\n    const write = () => props.setMotive(input.current.value)\r\n\r\n    return (\r\n        <TextField\r\n            value={props.motive}\r\n            placeholder=\"Цель участия\"\r\n            className={props.UIstyle}\r\n            fullWidth\r\n            inputRef={input}\r\n            onChange={write}\r\n        />\r\n    );\r\n}\r\n\r\nexport default InputMotive;\r\n","import React, {useRef} from 'react';\r\nimport { Input, InputAdornment } from '@material-ui/core';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\n\r\n\r\nfunction InputGroup(props) {\r\n\r\n    const input = useRef(null)\r\n    const write = () => props.setGroup(input.current.value)\r\n    return (\r\n        <Input\r\n            value={props.group}\r\n            placeholder={'Группа'}\r\n            className={props.UIstyle}\r\n            startAdornment={<InputAdornment position=\"start\"><PeopleIcon /></InputAdornment>}\r\n            inputProps={{ 'aria-label': 'description' }}\r\n            inputRef={input}\r\n            onChange={write}\r\n            fullWidth>\r\n        </Input>\r\n    );\r\n}\r\n\r\nexport default InputGroup;\r\n","import React, {useState, useEffect} from 'react';\r\nimport styles from './OsuStyles.module.css'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Alert } from '@material-ui/lab';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nimport InputName from './InputList/InputName';\r\nimport InputSurname from './InputList/InputSurname';\r\nimport InputSend from './InputList/InputSend';\r\nimport InputMotive from './InputList/InputMotive';\r\nimport InputGroup from './InputList/InputGroup';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    textarea: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        margin: theme.spacing(2),\r\n    }\r\n}));\r\n\r\n\r\n  \r\n\r\nfunction Osu() {\r\n\r\n    const UIstyles = useStyles()\r\n\r\n    const [name, setName] = useState('')\r\n    const [surname, setSurname] = useState('')\r\n    const [group, setGroup] = useState('')\r\n    const [motive, setMotive] = useState('')\r\n    const [openSubmit,setOpenSubmit] = useState('none')\r\n    const [openError,setOpenError] = useState('none')\r\n\r\n    \r\n\r\n    useEffect(() => console.log('setName'), [name])\r\n    useEffect(() => console.log('setSurname'), [surname])\r\n    useEffect(() => console.log('SetGroup'), [group])\r\n    useEffect(() => console.log('setMotive'), [motive])\r\n    \r\n\r\n    const onFinish = (e) => {\r\n        console.log([name, surname, group, motive])\r\n        if(name === '' || surname === '' || group === '' || motive === '')\r\n            setOpenError('')\r\n        else {\r\n            setName('') \r\n            setSurname('')\r\n            setGroup('')\r\n            setMotive('')\r\n            setOpenError('none')\r\n            setOpenSubmit('')\r\n        }    \r\n        e.preventDefault()\r\n    }\r\n\r\n    const closeError = () => {\r\n        if(openError === '') setOpenError('none')\r\n        else setOpenError('')\r\n    }\r\n    const closeSubmit = () => {\r\n        if(openSubmit === '') setOpenSubmit('none')\r\n        else setOpenSubmit('')\r\n    }\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Alert\r\n                severity=\"error\"\r\n                style={{ display: openError}}\r\n                action={<Button color=\"inherit\" size=\"small\" onClick={closeError}>x</Button>}>\r\n                Заполните все поля\r\n            </Alert>\r\n            <Alert\r\n                severity=\"success\"\r\n                style={{ display: openSubmit}}\r\n                action={<Button color=\"inherit\" size=\"small\" onClick={closeSubmit}>x</Button>}>\r\n                Ваша заявка отправлена\r\n            </Alert>\r\n\r\n            <form className={styles.form} onSubmit={onFinish}>\r\n                <InputName    UIstyle={UIstyles.margin}   setName={setName}       name={name}/>\r\n                <InputSurname UIstyle={UIstyles.margin}   setSurname={setSurname} surname={surname} />\r\n                <InputGroup   UIstyle={UIstyles.margin}   setGroup={setGroup}     group={group}/>\r\n                <InputMotive  UIstyle={UIstyles.textarea} setMotive={setMotive}   motive={motive}/>\r\n                <InputSend/>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Osu;\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Osu from './comnonents/Osu/Osu';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className=\"App\">\n\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MailOutlineIcon/>\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Заявка на участие\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n\n      <Switch>\n        <Route exact path='/' component={Osu} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}